openapi: 3.0.0
info:
  title: BankWiz API
  version: 0.3.1
  description: An API for accessing banking functionalities provided by BankWiz
servers:
  - url: http://localhost:8080
    description: Local developpement (server)
  - url: http://localhost:9080
    description: Local developpement (frontend)
tags:
  - name: UserService
    description: API endpoints for managing user information
security:
  - oauth2:
    - openid
    - profile
    - email
paths:
  /user:
    get:
      tags:
        - UserService
      summary: Get the current user information
      operationId: getCurrentUserInfo
      responses:
        '200':
          description: Successfully retrieved user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Invalid request. Please check the provided data.
  /user/checkregistration:
    get:
      tags:
        - UserService
      summary: Checks if the user is registered, and registers her if not.
      operationId: checkRegistration
      responses:
        '200':
          description: Successfully retrieved user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Invalid request. Please check the provided data.
components:
  securitySchemes:
    oauth2:   # <--- Arbitrary name for the security scheme. Used to refer to it from elsewhere.
      type: oauth2
      description: For more information, see https://api.slack.com/docs/oauth
      flows: 
        implicit:
          authorizationUrl: https://bankwiz-dev.eu.auth0.com/authorize?audience=Bankwiz_server
          scopes:
            openid: openid
            profile: profile
            email: email
  schemas:
    FunctionalExceptionDTO:
      type: object
      properties:
        status:
          type: integer
        details:
          type: string
        exception:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - status
        - details
        - exception
        - message
        - timestamp
    MethodArgumentNotValidExceptionDTO:
      type: object
      properties:
        status:
          type: integer
        details:
          type: string
        exception:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        field:
          type: string
        objectName:
          type: string
      required:
        - status
        - details
        - exception
        - message
        - timestamp
        - field
        - objectName
    UserDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
          example: johndoe@example.com
      required:
        - id
        - email